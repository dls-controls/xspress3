###########################################################
# This template contains some high level records that tie
# together the various areaDetector plugins needed for the
# xspress3. 
#
# Macros:
# % macro,  P,           Device prefix
# % macro,  R,           Device suffix
# % macro,  HDF,         HDF plugin record prefix
# % macro,  PROC,        Processing plugin record prefix
# % macro,  XSP3_PORT,   Name of the Xspress3 asyn port
# % macro,  XSP3_ADDR,   Address of the Xspress3 asyn port
# % macro,  TIMEOUT,     Timeout
# % macro,  ADDR,        Asyn Port address
#
###########################################################

# % $(TIMEOUT)
# % $(ADDR)
substitute "NDARRAY_PORT=$(XSP3_PORT), NDARRAY_ADDR=$(XSP3_ADDR)"


#Turn off the default alarm state of the HDF plugin Capture_RBV PV
record(bi, $(HDF)Capture_RBV)
{
   field(OSV, "NO_ALARM")
}

#############################################################
# The following records and templates are responsible for
# reseting and erasing data from the plugins, when the 
# user triggers a top level ERASE.
#############################################################

#Trigger an erase of the PROC plugin data.
record(bo,"$(P)$(R)ERASE") 
{
   field(FLNK, "$(P)$(R)ERASE_PROC_ResetFilter.PROC")
}
record(bo, "$(P)$(R)ERASE_PROC_ResetFilter")
{
   field(VAL, "1")
   field(OUT, "$(PROC)ResetFilter.PROC")
   field(FLNK, "$(P)$(R)ERASE_ArrayCounters") 
}
record(dfanout, "$(P)$(R)ERASE_ArrayCounters")
{
   field(VAL, "0")
   field(OUTA, "$(PROC)ArrayCounter PP")
   field(FLNK, "$(P)$(R)ERASE_AttrReset")
}

#On an erase, do a reset on the NDAttribute plugins. This has MDEL of -1, so channel access updates
#are triggered every time, and there is a bo record for every channel that monitors its value.
record(dfanout, "$(P)$(R)ERASE_AttrReset")
{
   field(VAL, "1")
   field(MDEL, "-1" )
}



#########################################################################
# Records to update the arrays in the NDAttribute plugins.
# This is needed for high data rate collections at the end of a scan
# due to the fact that the NDAttribute plugins only update the arrays
# at a slow rate and may miss some points at the end of a scan.
#########################################################################

#Trigger an update of the NDAttribute arrays
record(bi,"$(P)$(R)UPDATE")
{
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(FLNK, "$(P)$(R)UPDATER")
}

record(longout, "$(P)$(R)UPDATER")
{
    field(VAL, 3)
    field(MDEL, -1)
}

# ROI for file saving
substitute "PORT=$(XSP3_PORT).ROIDATA, R=:ROIDATA:"
include "NDROI.template"

substitute "P=$(HDF), R=, PORT=$(XSP3_PORT).HDF5, NDARRAY_PORT=$(XSP3_PORT).ROIDATA"
include "NDFileHDF5.template"

# This plugin is to create a running sum of the spectra
substitute "P=$(PROC), R=, PORT=$(XSP3_PORT).PROC, NDARRAY_PORT=$(XSP3_PORT)"
include "NDProcess.template"
